Q1 How did viewing a diff between two versions of a file help you see the bug that was introduced?

- It pointed the location and edit differences between files compared. The bug, if any, would have to be contained in this set. 

Q2 How could having easy access to the entire history of a file make you a more efficient programmer in the long term? 

- Accidental edits could be easily identified and undone. Reverting to previous working versions would save much time in an accident.  

Q3 What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

- Automatic save woudld rely on elapsed time, inactivity, or an edit buffer size. It is more meaningful to save logical chunks of code changes. It is very likely that these two would not co-incide. So, while auto-save would limit risk, the versions saved would be hardly useful. The cons are that one must manually save versions at logical conclusion of some part of the code. 

Q4 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

- Projects may require multiple files to be modified for a single logical update to its functionality, eg. web pages files. A single commit should therefore cover multiple files. Others platforms aside from Git (supports project), are designed for single file workflows, and support edits in a single file at a time. 

Q5 How can you use the commands git log and git diff to view the history of files?

- The log command provides id and msgs for each commit to the repository. The diff command compares two (subsequent) versions for changes made.

Q6 How might using version control make you more confident to make changes that could break something?

- Confidence comes from knowing that all previous working versions are available if bugs are accidentally introduced, by using a 'git checkout' of the previous commit. You can work isk free without fear of breaking code. 

Q7 Now that you have your workspace set up, what do you want to try using Git for?

- Set up analytics and spark projects with version control. 




